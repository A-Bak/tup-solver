limit_big(5).  limit_small(3).
team(1..14).  umpire(1..7).
round(1..26).  last(26).

distance(1, 1, 0). distance(1, 2, 80). distance(1, 3, 337). distance(1, 4, 1090). distance(1, 5, 315). distance(1, 6, 567). distance(1, 7, 712). distance(1, 8, 871). distance(1, 9, 741). distance(1, 10, 1420). distance(1, 11, 1630). distance(1, 12, 2560). distance(1, 13, 2430). distance(1, 14, 745).
distance(2, 1, 80). distance(2, 2, 0). distance(2, 3, 380). distance(2, 4, 1020). distance(2, 5, 257). distance(2, 6, 501). distance(2, 7, 664). distance(2, 8, 808). distance(2, 9, 697). distance(2, 10, 1340). distance(2, 11, 1570). distance(2, 12, 2520). distance(2, 13, 2370). distance(2, 14, 665).
distance(3, 1, 337). distance(3, 2, 380). distance(3, 3, 0). distance(3, 4, 1380). distance(3, 5, 408). distance(3, 6, 622). distance(3, 7, 646). distance(3, 8, 878). distance(3, 9, 732). distance(3, 10, 1520). distance(3, 11, 1530). distance(3, 12, 2430). distance(3, 13, 2360). distance(3, 14, 929).
distance(4, 1, 1090). distance(4, 2, 1020). distance(4, 3, 1380). distance(4, 4, 0). distance(4, 5, 1010). distance(4, 6, 957). distance(4, 7, 1190). distance(4, 8, 1060). distance(4, 9, 1270). distance(4, 10, 966). distance(4, 11, 1720). distance(4, 12, 2590). distance(4, 13, 2270). distance(4, 14, 605).
distance(5, 1, 315). distance(5, 2, 257). distance(5, 3, 408). distance(5, 4, 1010). distance(5, 5, 0). distance(5, 6, 253). distance(5, 7, 410). distance(5, 8, 557). distance(5, 9, 451). distance(5, 10, 1140). distance(5, 11, 1320). distance(5, 12, 2260). distance(5, 13, 2110). distance(5, 14, 521).
distance(6, 1, 567). distance(6, 2, 501). distance(6, 3, 622). distance(6, 4, 957). distance(6, 5, 253). distance(6, 6, 0). distance(6, 7, 250). distance(6, 8, 311). distance(6, 9, 325). distance(6, 10, 897). distance(6, 11, 1090). distance(6, 12, 2040). distance(6, 13, 1870). distance(6, 14, 370).
distance(7, 1, 712). distance(7, 2, 664). distance(7, 3, 646). distance(7, 4, 1190). distance(7, 5, 410). distance(7, 6, 250). distance(7, 7, 0). distance(7, 8, 260). distance(7, 9, 86). distance(7, 10, 939). distance(7, 11, 916). distance(7, 12, 1850). distance(7, 13, 1730). distance(7, 14, 587).
distance(8, 1, 871). distance(8, 2, 808). distance(8, 3, 878). distance(8, 4, 1060). distance(8, 5, 557). distance(8, 6, 311). distance(8, 7, 260). distance(8, 8, 0). distance(8, 9, 328). distance(8, 10, 679). distance(8, 11, 794). distance(8, 12, 1740). distance(8, 13, 1560). distance(8, 14, 467).
distance(9, 1, 741). distance(9, 2, 697). distance(9, 3, 732). distance(9, 4, 1270). distance(9, 5, 451). distance(9, 6, 325). distance(9, 7, 86). distance(9, 8, 328). distance(9, 9, 0). distance(9, 10, 1005). distance(9, 11, 905). distance(9, 12, 1846). distance(9, 13, 1731). distance(9, 14, 670).
distance(10, 1, 1420). distance(10, 2, 1340). distance(10, 3, 1520). distance(10, 4, 966). distance(10, 5, 1140). distance(10, 6, 897). distance(10, 7, 939). distance(10, 8, 679). distance(10, 9, 1005). distance(10, 10, 0). distance(10, 11, 878). distance(10, 12, 1640). distance(10, 13, 1300). distance(10, 14, 700).
distance(11, 1, 1630). distance(11, 2, 1570). distance(11, 3, 1530). distance(11, 4, 1720). distance(11, 5, 1320). distance(11, 6, 1090). distance(11, 7, 916). distance(11, 8, 794). distance(11, 9, 905). distance(11, 10, 878). distance(11, 11, 0). distance(11, 12, 947). distance(11, 13, 832). distance(11, 14, 1210).
distance(12, 1, 2560). distance(12, 2, 2520). distance(12, 3, 2430). distance(12, 4, 2590). distance(12, 5, 2260). distance(12, 6, 2040). distance(12, 7, 1850). distance(12, 8, 1740). distance(12, 9, 1846). distance(12, 10, 1640). distance(12, 11, 947). distance(12, 12, 0). distance(12, 13, 458). distance(12, 14, 2130).
distance(13, 1, 2430). distance(13, 2, 2370). distance(13, 3, 2360). distance(13, 4, 2270). distance(13, 5, 2110). distance(13, 6, 1870). distance(13, 7, 1730). distance(13, 8, 1560). distance(13, 9, 1731). distance(13, 10, 1300). distance(13, 11, 832). distance(13, 12, 458). distance(13, 13, 0). distance(13, 14, 1890).
distance(14, 1, 745). distance(14, 2, 665). distance(14, 3, 929). distance(14, 4, 605). distance(14, 5, 521). distance(14, 6, 370). distance(14, 7, 587). distance(14, 8, 467). distance(14, 9, 670). distance(14, 10, 700). distance(14, 11, 1210). distance(14, 12, 2130). distance(14, 13, 1890). distance(14, 14, 0).
distance(X,Y,D) :- distance(Y,X,D).
max_distance(2590).

plays(1, 2, 1). plays(4, 8, 1). plays(5, 7, 1). plays(9, 10, 1). plays(11, 3, 1). plays(12, 6, 1). plays(13, 14, 1).
plays(5, 2, 2). plays(7, 4, 2). plays(8, 10, 2). plays(9, 1, 2). plays(11, 12, 2). plays(13, 6, 2). plays(14, 3, 2).
plays(2, 7, 3). plays(5, 11, 3). plays(8, 4, 3). plays(10, 1, 3). plays(12, 9, 3). plays(13, 3, 3). plays(14, 6, 3).
plays(2, 5, 4). plays(3, 7, 4). plays(6, 11, 4). plays(8, 1, 4). plays(10, 4, 4). plays(12, 13, 4). plays(14, 9, 4).
plays(1, 14, 5). plays(2, 3, 5). plays(4, 5, 5). plays(6, 13, 5). plays(7, 11, 5). plays(9, 12, 5). plays(10, 8, 5).
plays(1, 7, 6). plays(3, 4, 6). plays(5, 14, 6). plays(8, 6, 6). plays(9, 13, 6). plays(11, 2, 6). plays(12, 10, 6).
plays(1, 3, 7). plays(6, 4, 7). plays(7, 2, 7). plays(9, 8, 7). plays(11, 5, 7). plays(12, 14, 7). plays(13, 10, 7).
plays(4, 11, 8). plays(6, 1, 8). plays(7, 9, 8). plays(8, 2, 8). plays(12, 3, 8). plays(13, 5, 8). plays(14, 10, 8).
plays(1, 9, 9). plays(2, 11, 9). plays(4, 6, 9). plays(7, 8, 9). plays(10, 3, 9). plays(13, 12, 9). plays(14, 5, 9).
plays(2, 8, 10). plays(3, 11, 10). plays(4, 1, 10). plays(5, 9, 10). plays(6, 7, 10). plays(10, 13, 10). plays(14, 12, 10).
plays(2, 1, 11). plays(3, 6, 11). plays(8, 13, 11). plays(9, 4, 11). plays(10, 14, 11). plays(11, 7, 11). plays(12, 5, 11).
plays(3, 1, 12). plays(4, 14, 12). plays(6, 10, 12). plays(7, 13, 12). plays(8, 11, 12). plays(9, 5, 12). plays(12, 2, 12).
plays(1, 5, 13). plays(4, 12, 13). plays(6, 9, 13). plays(7, 3, 13). plays(8, 14, 13). plays(10, 11, 13). plays(13, 2, 13).
plays(1, 8, 14). plays(3, 12, 14). plays(4, 7, 14). plays(5, 6, 14). plays(10, 9, 14). plays(11, 13, 14). plays(14, 2, 14).
plays(1, 13, 15). plays(2, 4, 15). plays(3, 10, 15). plays(5, 8, 15). plays(7, 12, 15). plays(9, 6, 15). plays(11, 14, 15).
plays(2, 10, 16). plays(4, 3, 16). plays(5, 13, 16). plays(7, 6, 16). plays(9, 14, 16). plays(11, 8, 16). plays(12, 1, 16).
plays(3, 5, 17). plays(4, 10, 17). plays(6, 2, 17). plays(7, 14, 17). plays(8, 9, 17). plays(12, 11, 17). plays(13, 1, 17).
plays(3, 8, 18). plays(6, 5, 18). plays(9, 2, 18). plays(10, 7, 18). plays(12, 4, 18). plays(13, 11, 18). plays(14, 1, 18).
plays(1, 12, 19). plays(6, 8, 19). plays(7, 5, 19). plays(9, 3, 19). plays(10, 2, 19). plays(13, 4, 19). plays(14, 11, 19).
plays(2, 13, 20). plays(5, 12, 20). plays(8, 3, 20). plays(9, 7, 20). plays(10, 6, 20). plays(11, 1, 20). plays(14, 4, 20).
plays(2, 14, 21). plays(3, 13, 21). plays(4, 9, 21). plays(5, 10, 21). plays(7, 1, 21). plays(8, 12, 21). plays(11, 6, 21).
plays(1, 6, 22). plays(2, 9, 22). plays(3, 14, 22). plays(4, 13, 22). plays(8, 5, 22). plays(11, 10, 22). plays(12, 7, 22).
plays(1, 11, 23). plays(3, 9, 23). plays(4, 2, 23). plays(6, 14, 23). plays(10, 5, 23). plays(12, 8, 23). plays(13, 7, 23).
plays(1, 4, 24). plays(2, 6, 24). plays(5, 3, 24). plays(9, 11, 24). plays(10, 12, 24). plays(13, 8, 24). plays(14, 7, 24).
plays(2, 12, 25). plays(5, 1, 25). plays(6, 3, 25). plays(7, 10, 25). plays(11, 4, 25). plays(13, 9, 25). plays(14, 8, 25).
plays(1, 10, 26). plays(3, 2, 26). plays(5, 4, 26). plays(6, 12, 26). plays(8, 7, 26). plays(11, 9, 26). plays(14, 13, 26).

% Defines home team as the first of the two teams.
home_team(Home,R) :- plays(Home,Away,R).

% Generating search space, Umpire X moves to the home venue of team Y in round T
% Constrains the umpires movement to 1 move per round
1 { move(X,Y,T) : home_team(Y,T) } 1 :- umpire(X), round(T).

% Constrains the maximum number of umpires at a game to 1
:- move(U1,T,R), move(U2,T,R), U1 != U2.

% Constrains the minimum number of umpires at a game to 1
:- home_team(T,R), round(R), { move(U,T,R) : umpire(U) } 0.

% Express constrain that every umpire must visit each venue at least once
been_to(U,T) :- round(R), move(U,T,R).
:- umpire(U), team(T), not been_to(U,T).

% Express the constraint d1
:- move(U,T,R1), move(U,T,R2), R1 < R2, limit_big(B), R2 - R1 + 1 <= B.

% Express the constraint d2
officiates(U,Home,R) :- move(U,Home,R).
officiates(U,Away,R) :- move(U,Home,R), plays(Home,Away,R).
:- officiates(U,T,R1), officiates(U,T,R2), R1 < R2, limit_small(S), R2 - R1 + 1 <= S.

moved(U,R,D) :- umpire(U), team(T), round(R), R > 1, move(U,T,R), move(U,Tp,R-1), distance(T,Tp,D).

% Optimization objective - Minimize distance D traveled
#minimize { D,U,R : moved(U,R,D) }.

#heuristic move(U,T,R) : round(R), team(T), umpire(U), not been_to(U,T), move(U,T1,R-1), distance(T,T1,D). [-R*D@2, level]
#heuristic move(U,T,R) : round(R), team(T), umpire(U), move(U,T1,R-1), distance(T,T1,D). [-D@1, level]


